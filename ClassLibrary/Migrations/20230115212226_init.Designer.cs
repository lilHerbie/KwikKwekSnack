// <auto-generated />
using ClassLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassLibrary.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230115212226_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassLibrary.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Drinks");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Description = "Cola",
                            ImageUrl = "https://smartkiosk.nl/wp-content/uploads/2021/11/coca-cola-blik-33cl-800x800-1.jpg",
                            Name = "Cola",
                            Price = 1.6f
                        },
                        new
                        {
                            Id = -2,
                            Description = "Fanta",
                            ImageUrl = "https://smartkiosk.nl/wp-content/uploads/2021/10/9480.jpg",
                            Name = "Fanta",
                            Price = 1.5f
                        },
                        new
                        {
                            Id = -3,
                            Description = "Sprite",
                            ImageUrl = "https://smartkiosk.nl/wp-content/uploads/2021/09/2ad47881-f56c-4237-8574-402a84b96b63.jpg",
                            Name = "Sprite",
                            Price = 1.5f
                        },
                        new
                        {
                            Id = -4,
                            Description = "Bier",
                            ImageUrl = "https://www.plus.nl/INTERSHOP/static/WFS/PLUS-Site/-/PLUS/nl_NL/product/L/853866.png",
                            Name = "Bier",
                            Price = 1.5f
                        },
                        new
                        {
                            Id = -5,
                            Description = "Baco",
                            ImageUrl = "https://goedkoopdrankslijterij.nl/image/cache/catalog/Sterke%20drank/Rum/bacardi/Bacardi-Cola-Mix-Blikjes-kopen-800x800.jpg",
                            Name = "Baco",
                            Price = 3.5f
                        },
                        new
                        {
                            Id = -6,
                            Description = "Stroh80",
                            ImageUrl = "https://static.gall.nl/images/IMG_685854_500.png?rev=0.2",
                            Name = "Stroh80",
                            Price = 5f
                        });
                });

            modelBuilder.Entity("ClassLibrary.DrinkLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("DrinkId")
                        .HasColumnType("int");

                    b.Property<bool>("HasIce")
                        .HasColumnType("bit");

                    b.Property<bool>("HasStraw")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DrinkId");

                    b.HasIndex("OrderId");

                    b.ToTable("DrinkLines");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Amount = 1,
                            DrinkId = -1,
                            HasIce = true,
                            HasStraw = true,
                            OrderId = -1,
                            Size = 0
                        },
                        new
                        {
                            Id = -2,
                            Amount = 32,
                            DrinkId = -4,
                            HasIce = false,
                            HasStraw = true,
                            OrderId = -2,
                            Size = 3
                        },
                        new
                        {
                            Id = -3,
                            Amount = 32,
                            DrinkId = -5,
                            HasIce = true,
                            HasStraw = true,
                            OrderId = -2,
                            Size = 3
                        },
                        new
                        {
                            Id = -4,
                            Amount = 1,
                            DrinkId = -2,
                            HasIce = false,
                            HasStraw = false,
                            OrderId = -3,
                            Size = 1
                        });
                });

            modelBuilder.Entity("ClassLibrary.Extra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Extras");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Ui",
                            Price = 0.3f
                        },
                        new
                        {
                            Id = -2,
                            Name = "Broodje",
                            Price = 1f
                        },
                        new
                        {
                            Id = -3,
                            Name = "Tomaat",
                            Price = 0.2f
                        },
                        new
                        {
                            Id = -4,
                            Name = "Mayonaise",
                            Price = 0.5f
                        },
                        new
                        {
                            Id = -5,
                            Name = "Ketchup",
                            Price = 0.5f
                        });
                });

            modelBuilder.Entity("ClassLibrary.ExtraLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExtraId")
                        .HasColumnType("int");

                    b.Property<int>("SnackLineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExtraId");

                    b.HasIndex("SnackLineId");

                    b.ToTable("ExtraLines");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            ExtraId = -1,
                            SnackLineId = -1
                        },
                        new
                        {
                            Id = -2,
                            ExtraId = -2,
                            SnackLineId = -2
                        },
                        new
                        {
                            Id = -3,
                            ExtraId = -4,
                            SnackLineId = -3
                        });
                });

            modelBuilder.Entity("ClassLibrary.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TakeAway")
                        .HasColumnType("bit");

                    b.Property<float>("TotalCost")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Status = 0,
                            TakeAway = false,
                            TotalCost = 4.4f
                        },
                        new
                        {
                            Id = -2,
                            Status = 0,
                            TakeAway = false,
                            TotalCost = 62f
                        },
                        new
                        {
                            Id = -3,
                            Status = 0,
                            TakeAway = false,
                            TotalCost = 20f
                        });
                });

            modelBuilder.Entity("ClassLibrary.Snack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Snacks");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Description = "Frikandel",
                            ImageUrl = "https://boshuis.huisjebezorgd.nl/wp-content/uploads/2020/03/29512948_652505005141152_1601506864166600704_o.jpg",
                            Name = "Frikandel",
                            Price = 2.5f
                        },
                        new
                        {
                            Id = -2,
                            Description = "Kroket",
                            ImageUrl = "https://images0.persgroep.net/rcs/IFZ8aVdFNg1-Bko2qCSQg5i8G-A/diocontent/101162365/_fitwidth/763?appId=93a17a8fd81db0de025c8abd1cca1279&quality=0.8",
                            Name = "Kroket",
                            Price = 2.75f
                        },
                        new
                        {
                            Id = -3,
                            Description = "Bamischijf",
                            ImageUrl = "https://veluwe-plaza.huisjebezorgd.nl/wp-content/uploads/2020/03/bami.jpg",
                            Name = "Bamischijf",
                            Price = 3f
                        },
                        new
                        {
                            Id = -4,
                            Description = "Kaassouflé",
                            ImageUrl = "https://www.ahealthylife.nl/wp-content/uploads/2021/06/Kaassouffle_voedingswaarde-1.jpg",
                            Name = "Kaassouflé",
                            Price = 4.5f
                        },
                        new
                        {
                            Id = -5,
                            Description = "Mexicano",
                            ImageUrl = "https://mexicano.nl/wp-content/uploads/Mexicano-630x312.png",
                            Name = "Mexicano",
                            Price = 2.5f
                        },
                        new
                        {
                            Id = -6,
                            Description = "Friet",
                            ImageUrl = "https://www.ahealthylife.nl/wp-content/uploads/2019/05/patat_friet_voedingswaarde.jpg",
                            Name = "Friet",
                            Price = 1.5f
                        });
                });

            modelBuilder.Entity("ClassLibrary.SnackLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("SnackId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("SnackId");

                    b.ToTable("SnackLines");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Amount = 1,
                            OrderId = -1,
                            SnackId = -1
                        },
                        new
                        {
                            Id = -2,
                            Amount = 2,
                            OrderId = -2,
                            SnackId = -3
                        },
                        new
                        {
                            Id = -3,
                            Amount = 1,
                            OrderId = -3,
                            SnackId = -4
                        });
                });

            modelBuilder.Entity("ClassLibrary.DrinkLine", b =>
                {
                    b.HasOne("ClassLibrary.Drink", "Drink")
                        .WithMany()
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibrary.Order", null)
                        .WithMany("DrinkLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drink");
                });

            modelBuilder.Entity("ClassLibrary.ExtraLine", b =>
                {
                    b.HasOne("ClassLibrary.Extra", "Extra")
                        .WithMany()
                        .HasForeignKey("ExtraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibrary.SnackLine", null)
                        .WithMany("ExtraLines")
                        .HasForeignKey("SnackLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Extra");
                });

            modelBuilder.Entity("ClassLibrary.SnackLine", b =>
                {
                    b.HasOne("ClassLibrary.Order", null)
                        .WithMany("SnackLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibrary.Snack", "Snack")
                        .WithMany()
                        .HasForeignKey("SnackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Snack");
                });

            modelBuilder.Entity("ClassLibrary.Order", b =>
                {
                    b.Navigation("DrinkLines");

                    b.Navigation("SnackLines");
                });

            modelBuilder.Entity("ClassLibrary.SnackLine", b =>
                {
                    b.Navigation("ExtraLines");
                });
#pragma warning restore 612, 618
        }
    }
}
